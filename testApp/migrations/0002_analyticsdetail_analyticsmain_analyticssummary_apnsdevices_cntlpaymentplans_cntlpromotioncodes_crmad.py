# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2016-01-27 09:15
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('testApp', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnalyticsDetail',
            fields=[
                ('userid', models.IntegerField(db_column='USERID')),
                ('eventid', models.IntegerField(db_column='EVENTID', primary_key=True, serialize=False)),
                ('event_type', models.CharField(blank=True, db_column='EVENT_TYPE', max_length=1, null=True)),
                ('share_url', models.CharField(blank=True, db_column='SHARE_URL', max_length=256, null=True)),
                ('emailid', models.CharField(db_column='EMAILID', max_length=100)),
                ('fb_likes', models.IntegerField(blank=True, db_column='FB_LIKES', null=True)),
                ('fb_shares', models.IntegerField(blank=True, db_column='FB_SHARES', null=True)),
                ('fb_comments', models.IntegerField(blank=True, db_column='FB_COMMENTS', null=True)),
                ('tw_tweets', models.IntegerField(blank=True, db_column='TW_TWEETS', null=True)),
                ('g_plus_ones', models.IntegerField(blank=True, db_column='G_PLUS_ONES', null=True)),
                ('lastupd_dttm', models.DateTimeField(blank=True, db_column='LASTUPD_DTTM', null=True)),
            ],
            options={
                'db_table': 'ANALYTICS_DETAIL',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnalyticsMain',
            fields=[
                ('userid', models.IntegerField(db_column='USERID')),
                ('eventid', models.IntegerField(db_column='EVENTID', primary_key=True, serialize=False)),
                ('share_url', models.CharField(blank=True, db_column='SHARE_URL', max_length=255, null=True)),
                ('emailid', models.CharField(db_column='EMAILID', max_length=100)),
                ('fb_likes', models.IntegerField(blank=True, db_column='FB_LIKES', null=True)),
                ('fb_shares', models.IntegerField(blank=True, db_column='FB_SHARES', null=True)),
                ('fb_comments', models.IntegerField(blank=True, db_column='FB_COMMENTS', null=True)),
                ('tw_tweets', models.IntegerField(blank=True, db_column='TW_TWEETS', null=True)),
                ('g_plus_ones', models.IntegerField(blank=True, db_column='G_PLUS_ONES', null=True)),
                ('lastupd_dttm', models.DateTimeField(blank=True, db_column='LASTUPD_DTTM', null=True)),
            ],
            options={
                'db_table': 'ANALYTICS_MAIN',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnalyticsSummary',
            fields=[
                ('userid', models.IntegerField(blank=True, db_column='USERID', null=True)),
                ('eventid', models.IntegerField(db_column='EVENTID', primary_key=True, serialize=False)),
                ('event_title', models.CharField(db_column='EVENT_TITLE', max_length=100)),
                ('host_name', models.CharField(db_column='HOST_NAME', max_length=100)),
                ('sender_emailid', models.CharField(blank=True, db_column='SENDER_EMAILID', max_length=255, null=True)),
                ('sent_count', models.IntegerField(blank=True, db_column='SENT_COUNT', null=True)),
                ('delivery_count', models.IntegerField(blank=True, db_column='DELIVERY_COUNT', null=True)),
                ('uniq_open_count', models.IntegerField(blank=True, db_column='UNIQ_OPEN_COUNT', null=True)),
                ('total_open_count', models.IntegerField(blank=True, db_column='TOTAL_OPEN_COUNT', null=True)),
                ('uniq_click_count', models.IntegerField(blank=True, db_column='UNIQ_CLICK_COUNT', null=True)),
                ('total_click_count', models.IntegerField(blank=True, db_column='TOTAL_CLICK_COUNT', null=True)),
                ('spam_count', models.IntegerField(blank=True, db_column='SPAM_COUNT', null=True)),
                ('unsubscribe_count', models.IntegerField(blank=True, db_column='UNSUBSCRIBE_COUNT', null=True)),
                ('soft_bounce_count', models.IntegerField(blank=True, db_column='SOFT_BOUNCE_COUNT', null=True)),
                ('hard_bounce_count', models.IntegerField(blank=True, db_column='HARD_BOUNCE_COUNT', null=True)),
                ('sent_dttm', models.DateTimeField(blank=True, db_column='SENT_DTTM', null=True)),
                ('lastupd_dttm', models.DateTimeField(blank=True, db_column='LASTUPD_DTTM', null=True)),
            ],
            options={
                'db_table': 'ANALYTICS_SUMMARY',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ApnsDevices',
            fields=[
                ('pid', models.AutoField(db_column='PID', primary_key=True, serialize=False)),
                ('userid', models.IntegerField(db_column='USERID')),
                ('emailid', models.CharField(db_column='EMAILID', max_length=250)),
                ('app_name', models.CharField(db_column='APP_NAME', max_length=255)),
                ('app_version', models.CharField(db_column='APP_VERSION', max_length=25)),
                ('device_token', models.CharField(db_column='DEVICE_TOKEN', max_length=64)),
                ('device_name', models.CharField(db_column='DEVICE_NAME', max_length=255)),
                ('device_model', models.CharField(db_column='DEVICE_MODEL', max_length=100)),
                ('device_version', models.CharField(db_column='DEVICE_VERSION', max_length=25)),
                ('device_status', models.CharField(db_column='DEVICE_STATUS', max_length=1)),
                ('development', models.CharField(db_column='DEVELOPMENT', max_length=10)),
                ('create_dttm', models.DateTimeField(db_column='CREATE_DTTM')),
                ('last_login_dttm', models.DateTimeField(db_column='LAST_LOGIN_DTTM')),
                ('notification_alert', models.CharField(blank=True, db_column='NOTIFICATION_ALERT', max_length=1, null=True)),
                ('inwiter_alert', models.CharField(blank=True, db_column='INWITER_ALERT', max_length=1, null=True)),
                ('push_badge', models.CharField(blank=True, db_column='PUSH_BADGE', max_length=5, null=True)),
                ('push_sound', models.CharField(blank=True, db_column='PUSH_SOUND', max_length=1, null=True)),
            ],
            options={
                'db_table': 'APNS_DEVICES',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CntlPaymentPlans',
            fields=[
                ('seqid', models.AutoField(db_column='SEQID', primary_key=True, serialize=False)),
                ('userid', models.IntegerField(blank=True, db_column='USERID', null=True)),
                ('emailid', models.CharField(db_column='EMAILID', max_length=100)),
                ('payment_type', models.CharField(db_column='PAYMENT_TYPE', max_length=2)),
                ('remaining_events_count', models.IntegerField(blank=True, db_column='REMAINING_EVENTS_COUNT', null=True)),
                ('customer_limit', models.IntegerField(blank=True, db_column='CUSTOMER_LIMIT', null=True)),
                ('video_length', models.CharField(blank=True, db_column='VIDEO_LENGTH', max_length=45, null=True)),
                ('plan_amount', models.FloatField(db_column='PLAN_AMOUNT')),
                ('promotion_cd', models.CharField(db_column='PROMOTION_CD', max_length=10)),
                ('create_dt', models.DateField(db_column='CREATE_DT')),
                ('expire_dt', models.DateField(db_column='EXPIRE_DT')),
                ('last_upd_dttm', models.DateTimeField(db_column='LAST_UPD_DTTM')),
            ],
            options={
                'db_table': 'CNTL_PAYMENT_PLANS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CntlPromotionCodes',
            fields=[
                ('seqid', models.AutoField(db_column='SEQID', primary_key=True, serialize=False)),
                ('promotion_cd', models.CharField(db_column='PROMOTION_CD', max_length=10)),
                ('discount_percentage', models.IntegerField(db_column='DISCOUNT_PERCENTAGE')),
                ('total_users', models.IntegerField(db_column='TOTAL_USERS')),
                ('used_users', models.IntegerField(db_column='USED_USERS')),
                ('payment_type', models.CharField(blank=True, db_column='PAYMENT_TYPE', max_length=2, null=True)),
                ('app_type', models.CharField(blank=True, db_column='APP_TYPE', max_length=1, null=True)),
                ('create_dt', models.DateField(db_column='CREATE_DT')),
                ('expire_dt', models.DateField(db_column='EXPIRE_DT')),
                ('last_upd_dttm', models.DateTimeField(db_column='LAST_UPD_DTTM')),
            ],
            options={
                'db_table': 'CNTL_PROMOTION_CODES',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmAdmComments',
            fields=[
                ('seqid', models.AutoField(db_column='SEQID', primary_key=True, serialize=False)),
                ('userid', models.IntegerField(db_column='USERID')),
                ('eventid', models.IntegerField(db_column='EVENTID')),
                ('admin_emailid', models.CharField(db_column='ADMIN_EMAILID', max_length=45)),
                ('comments', models.CharField(blank=True, db_column='COMMENTS', max_length=200, null=True)),
                ('lastupddttm', models.DateTimeField(blank=True, db_column='LASTUPDDTTM', null=True)),
            ],
            options={
                'db_table': 'CRM_ADM_COMMENTS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CrmEditLogs',
            fields=[
                ('seqid', models.AutoField(db_column='SEQID', primary_key=True, serialize=False)),
                ('userid', models.IntegerField(blank=True, db_column='USERID', null=True)),
                ('crm_user_name', models.CharField(blank=True, db_column='CRM_USER_NAME', max_length=50, null=True)),
                ('action', models.CharField(blank=True, db_column='ACTION', max_length=100, null=True)),
                ('update_dttm', models.DateTimeField(blank=True, db_column='UPDATE_DTTM', null=True)),
            ],
            options={
                'db_table': 'CRM_EDIT_LOGS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EmailClickAnalytics',
            fields=[
                ('seq_id', models.AutoField(db_column='SEQ_ID', primary_key=True, serialize=False)),
                ('userid', models.IntegerField(blank=True, db_column='USERID', null=True)),
                ('eventid', models.IntegerField(blank=True, db_column='EVENTID', null=True)),
                ('messageid', models.CharField(db_column='MESSAGEID', max_length=100)),
                ('click_url', models.CharField(blank=True, db_column='CLICK_URL', max_length=255, null=True)),
                ('total_click_count', models.IntegerField(blank=True, db_column='TOTAL_CLICK_COUNT', null=True)),
                ('uniq_click_count', models.IntegerField(blank=True, db_column='UNIQ_CLICK_COUNT', null=True)),
                ('lastupd_dttm', models.DateTimeField(blank=True, db_column='LASTUPD_DTTM', null=True)),
            ],
            options={
                'db_table': 'EMAIL_CLICK_ANALYTICS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EmailClickTracking',
            fields=[
                ('seq_id', models.AutoField(db_column='SEQ_ID', primary_key=True, serialize=False)),
                ('messageid', models.CharField(db_column='MESSAGEID', max_length=45)),
                ('timestamp', models.DateTimeField(blank=True, db_column='TIMESTAMP', null=True)),
                ('user_agent', models.CharField(blank=True, db_column='USER_AGENT', max_length=255, null=True)),
                ('ip', models.CharField(blank=True, db_column='IP', max_length=45, null=True)),
                ('url', models.CharField(blank=True, db_column='URL', max_length=2083, null=True)),
                ('event_json', models.TextField(blank=True, db_column='EVENT_JSON', null=True)),
            ],
            options={
                'db_table': 'EMAIL_CLICK_TRACKING',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EmailClientAnalytics',
            fields=[
                ('seq_id', models.AutoField(db_column='SEQ_ID', primary_key=True, serialize=False)),
                ('userid', models.IntegerField(blank=True, db_column='USERID', null=True)),
                ('eventid', models.IntegerField(blank=True, db_column='EVENTID', null=True)),
                ('messageid', models.CharField(blank=True, db_column='MESSAGEID', max_length=100, null=True)),
                ('client_agent', models.CharField(blank=True, db_column='CLIENT_AGENT', max_length=255, null=True)),
                ('client_agent_ver', models.CharField(blank=True, db_column='CLIENT_AGENT_VER', max_length=255, null=True)),
                ('client_os', models.CharField(blank=True, db_column='CLIENT_OS', max_length=255, null=True)),
                ('client_os_ver', models.CharField(blank=True, db_column='CLIENT_OS_VER', max_length=255, null=True)),
                ('lastupd_dttm', models.DateTimeField(blank=True, db_column='LASTUPD_DTTM', null=True)),
            ],
            options={
                'db_table': 'EMAIL_CLIENT_ANALYTICS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EmailOpenTracking',
            fields=[
                ('seq_id', models.AutoField(db_column='SEQ_ID', primary_key=True, serialize=False)),
                ('messageid', models.CharField(db_column='MESSAGEID', max_length=45)),
                ('timestamp', models.DateTimeField(blank=True, db_column='TIMESTAMP', null=True)),
                ('user_agent', models.CharField(blank=True, db_column='USER_AGENT', max_length=255, null=True)),
                ('ip', models.CharField(blank=True, db_column='IP', max_length=45, null=True)),
                ('event_json', models.TextField(blank=True, db_column='EVENT_JSON', null=True)),
            ],
            options={
                'db_table': 'EMAIL_OPEN_TRACKING',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EmailSuspendList',
            fields=[
                ('susp_seqid', models.AutoField(db_column='SUSP_SEQID', primary_key=True, serialize=False)),
                ('emailid', models.CharField(db_column='EMAILID', max_length=255)),
                ('messageid', models.CharField(db_column='MESSAGEID', max_length=126)),
                ('status', models.CharField(db_column='STATUS', max_length=1)),
                ('lastupd_dttm', models.DateTimeField(db_column='LASTUPD_DTTM')),
            ],
            options={
                'db_table': 'EMAIL_SUSPEND_LIST',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EmailTracking',
            fields=[
                ('msg_seq', models.AutoField(db_column='MSG_SEQ', primary_key=True, serialize=False)),
                ('userid', models.IntegerField(blank=True, db_column='USERID', null=True)),
                ('eventid', models.IntegerField(blank=True, db_column='EVENTID', null=True)),
                ('transactionid', models.IntegerField(blank=True, db_column='TRANSACTIONID', null=True)),
                ('emailid', models.CharField(blank=True, db_column='EMAILID', max_length=255, null=True)),
                ('sender_emailid', models.CharField(blank=True, db_column='SENDER_EMAILID', max_length=255, null=True)),
                ('messageid', models.CharField(db_column='MESSAGEID', max_length=126)),
                ('msg_type', models.CharField(blank=True, db_column='MSG_TYPE', max_length=255, null=True)),
                ('delivery_status', models.CharField(blank=True, db_column='DELIVERY_STATUS', max_length=1, null=True)),
                ('open_status', models.CharField(blank=True, db_column='OPEN_STATUS', max_length=1, null=True)),
                ('spam_status', models.CharField(blank=True, db_column='SPAM_STATUS', max_length=1, null=True)),
                ('unsubscribe_status', models.CharField(blank=True, db_column='UNSUBSCRIBE_STATUS', max_length=1, null=True)),
                ('soft_bounce_status', models.CharField(blank=True, db_column='SOFT_BOUNCE_STATUS', max_length=1, null=True)),
                ('hard_bounce_status', models.CharField(blank=True, db_column='HARD_BOUNCE_STATUS', max_length=1, null=True)),
                ('bounce_description', models.TextField(blank=True, db_column='BOUNCE_DESCRIPTION', null=True)),
                ('bounce_message', models.TextField(blank=True, db_column='BOUNCE_MESSAGE', null=True)),
                ('user_agent', models.CharField(blank=True, db_column='USER_AGENT', max_length=255, null=True)),
                ('ip_address', models.CharField(blank=True, db_column='IP_ADDRESS', max_length=20, null=True)),
                ('event_json', models.TextField(blank=True, db_column='EVENT_JSON', null=True)),
                ('sent_dttm', models.DateTimeField(blank=True, db_column='SENT_DTTM', null=True)),
                ('lastupd_dttm', models.DateTimeField(db_column='LASTUPD_DTTM')),
            ],
            options={
                'db_table': 'EMAIL_TRACKING',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EmailVerificationList',
            fields=[
                ('seq_id', models.AutoField(db_column='SEQ_ID', primary_key=True, serialize=False)),
                ('emailid', models.CharField(db_column='EMAILID', max_length=255)),
                ('messageid', models.CharField(blank=True, db_column='MESSAGEID', max_length=126, null=True)),
                ('status', models.CharField(blank=True, db_column='STATUS', max_length=1, null=True)),
                ('lastupd_dttm', models.DateTimeField(db_column='LASTUPD_DTTM')),
            ],
            options={
                'db_table': 'EMAIL_VERIFICATION_LIST',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventCheckIn',
            fields=[
                ('check_in_id', models.AutoField(db_column='CHECK_IN_ID', primary_key=True, serialize=False)),
                ('eventid', models.IntegerField(blank=True, db_column='EVENTID', null=True)),
                ('transactionid', models.IntegerField(blank=True, db_column='TRANSACTIONID', null=True)),
                ('first_name', models.CharField(blank=True, db_column='FIRST_NAME', max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, db_column='LAST_NAME', max_length=100, null=True)),
                ('emailid', models.CharField(blank=True, db_column='EMAILID', max_length=100, null=True)),
                ('invited_by', models.CharField(blank=True, db_column='INVITED_BY', max_length=100, null=True)),
                ('rsvp_status', models.CharField(blank=True, db_column='RSVP_STATUS', max_length=1, null=True)),
                ('guests_nbr', models.IntegerField(blank=True, db_column='GUESTS_NBR', null=True)),
                ('kids_nbr', models.IntegerField(blank=True, db_column='KIDS_NBR', null=True)),
                ('check_in_status', models.CharField(blank=True, db_column='CHECK_IN_STATUS', max_length=1, null=True)),
                ('lastupd_dttm', models.DateTimeField(blank=True, db_column='LASTUPD_DTTM', null=True)),
            ],
            options={
                'db_table': 'EVENT_CHECK_IN',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventGuest',
            fields=[
                ('userid', models.IntegerField(db_column='USERID')),
                ('eventid', models.IntegerField(db_column='EVENTID')),
                ('transactionid', models.AutoField(db_column='TRANSACTIONID', primary_key=True, serialize=False)),
                ('contactid', models.IntegerField(db_column='CONTACTID')),
                ('first_name', models.CharField(blank=True, db_column='FIRST_NAME', max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, db_column='LAST_NAME', max_length=100, null=True)),
                ('other_guest_names', models.TextField(blank=True, db_column='OTHER_GUEST_NAMES', null=True)),
                ('emailid', models.CharField(db_column='EMAILID', max_length=100)),
                ('phone_nbr', models.CharField(blank=True, db_column='PHONE_NBR', max_length=12, null=True)),
                ('batch_nbr', models.CharField(blank=True, db_column='BATCH_NBR', max_length=12, null=True)),
                ('email_sent', models.CharField(db_column='EMAIL_SENT', max_length=1)),
                ('email_sent_dttm', models.DateTimeField(db_column='EMAIL_SENT_DTTM')),
                ('validate_email', models.CharField(blank=True, db_column='VALIDATE_EMAIL', max_length=1, null=True)),
                ('guest_view', models.CharField(db_column='GUEST_VIEW', max_length=1)),
                ('guest_view_dttm', models.DateTimeField(blank=True, db_column='GUEST_VIEW_DTTM', null=True)),
                ('rsvp_status', models.CharField(db_column='RSVP_STATUS', max_length=1)),
                ('guests_nbr', models.IntegerField(blank=True, db_column='GUESTS_NBR', null=True)),
                ('kids_nbr', models.IntegerField(blank=True, db_column='KIDS_NBR', null=True)),
                ('selected_poll_options', models.TextField(blank=True, db_column='SELECTED_POLL_OPTIONS', null=True)),
                ('selected_poll_options_json', models.TextField(blank=True, db_column='SELECTED_POLL_OPTIONS_JSON', null=True)),
                ('rsvp_dttm', models.DateTimeField(blank=True, db_column='RSVP_DTTM', null=True)),
                ('invite_fwd_by', models.CharField(blank=True, db_column='INVITE_FWD_BY', max_length=100, null=True)),
                ('is_user', models.CharField(db_column='IS_USER', max_length=1)),
                ('url', models.CharField(blank=True, db_column='URL', max_length=256, null=True)),
                ('received_status', models.CharField(blank=True, db_column='RECEIVED_STATUS', max_length=1, null=True)),
                ('msg_to_host', models.CharField(blank=True, db_column='MSG_TO_HOST', max_length=255, null=True)),
                ('apns_sent', models.CharField(db_column='APNS_SENT', max_length=1)),
                ('celery_job_id', models.CharField(blank=True, db_column='CELERY_JOB_ID', max_length=45, null=True)),
            ],
            options={
                'db_table': 'EVENT_GUEST',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventGuestComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField(db_column='USERID')),
                ('eventid', models.IntegerField(db_column='EVENTID')),
                ('comment', models.CharField(db_column='COMMENT', max_length=255)),
                ('comment_dttm', models.DateTimeField(db_column='COMMENT_DTTM')),
                ('emailid', models.CharField(db_column='EMAILID', max_length=100)),
                ('name', models.CharField(db_column='NAME', max_length=100)),
            ],
            options={
                'db_table': 'EVENT_GUEST_COMMENT',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventJobDefn',
            fields=[
                ('userid', models.IntegerField(db_column='USERID')),
                ('eventid', models.IntegerField(db_column='EVENTID')),
                ('job_defnid', models.AutoField(db_column='JOB_DEFNID', primary_key=True, serialize=False)),
                ('timezone', models.CharField(db_column='TIMEZONE', max_length=255)),
                ('schd_option', models.CharField(db_column='SCHD_OPTION', max_length=1)),
                ('schd_status', models.CharField(db_column='SCHD_STATUS', max_length=2)),
                ('recur_start_dt', models.DateField(blank=True, db_column='RECUR_START_DT', null=True)),
                ('recur_end_dt', models.DateField(blank=True, db_column='RECUR_END_DT', null=True)),
                ('recur_freq', models.CharField(blank=True, db_column='RECUR_FREQ', max_length=45, null=True)),
                ('send_mail_in_days', models.IntegerField(blank=True, db_column='SEND_MAIl_IN_DAYS', null=True)),
                ('send_reminder_in_days', models.IntegerField(blank=True, db_column='SEND_REMINDER_IN_DAYS', null=True)),
                ('recur_descr', models.CharField(blank=True, db_column='RECUR_DESCR', max_length=100, null=True)),
                ('recur_groupid', models.IntegerField(blank=True, db_column='RECUR_GROUPID', null=True)),
                ('create_dttm', models.DateTimeField(db_column='CREATE_DTTM')),
            ],
            options={
                'db_table': 'EVENT_JOB_DEFN',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventJobReqst',
            fields=[
                ('userid', models.IntegerField(db_column='USERID')),
                ('eventid', models.IntegerField(db_column='EVENTID')),
                ('job_defnid', models.IntegerField(db_column='JOB_DEFNID')),
                ('job_reqstid', models.AutoField(db_column='JOB_REQSTID', primary_key=True, serialize=False)),
                ('schd_option', models.CharField(db_column='SCHD_OPTION', max_length=1)),
                ('emailid', models.CharField(blank=True, db_column='EMAILID', max_length=100, null=True)),
                ('schedule_dt', models.DateField(db_column='SCHEDULE_DT')),
                ('schedule_tm', models.TimeField(db_column='SCHEDULE_TM')),
                ('event_start_dt', models.DateField(db_column='EVENT_START_DT')),
                ('event_end_dt', models.DateField(db_column='EVENT_END_DT')),
                ('event_start_tm', models.TimeField(db_column='EVENT_START_TM')),
                ('event_end_tm', models.TimeField(db_column='EVENT_END_TM')),
                ('schd_status', models.CharField(db_column='SCHD_STATUS', max_length=2)),
                ('create_dttm', models.DateTimeField(blank=True, db_column='CREATE_DTTM', null=True)),
                ('lastupd_dttm', models.DateTimeField(blank=True, db_column='LASTUPD_DTTM', null=True)),
                ('reminder_dt', models.DateField(blank=True, db_column='REMINDER_DT', null=True)),
                ('reminder_tm', models.TimeField(blank=True, db_column='REMINDER_TM', null=True)),
                ('celery_jobid', models.CharField(blank=True, db_column='CELERY_JOBID', max_length=100, null=True)),
            ],
            options={
                'db_table': 'EVENT_JOB_REQST',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventMain',
            fields=[
                ('userid', models.IntegerField(db_column='USERID')),
                ('eventid', models.AutoField(db_column='EVENTID', primary_key=True, serialize=False)),
                ('rsvp_need', models.CharField(db_column='RSVP_NEED', max_length=1)),
                ('event_type', models.CharField(db_column='EVENT_TYPE', max_length=1)),
                ('event_category', models.CharField(db_column='EVENT_CATEGORY', max_length=30)),
                ('is_public', models.CharField(db_column='IS_PUBLIC', max_length=1)),
                ('event_status', models.CharField(db_column='EVENT_STATUS', max_length=2)),
                ('event_title', models.CharField(db_column='EVENT_TITLE', max_length=100)),
                ('event_descr', models.TextField(db_column='EVENT_DESCR')),
                ('event_start_dt', models.DateField(db_column='EVENT_START_DT')),
                ('event_end_dt', models.DateField(blank=True, db_column='EVENT_END_DT', null=True)),
                ('event_start_tm', models.TimeField(db_column='EVENT_START_TM')),
                ('event_end_tm', models.TimeField(blank=True, db_column='EVENT_END_TM', null=True)),
                ('timezone', models.CharField(db_column='TIMEZONE', max_length=255)),
                ('host_name', models.CharField(db_column='HOST_NAME', max_length=100)),
                ('event_host_photo_url', models.CharField(blank=True, db_column='EVENT_HOST_PHOTO_URL', max_length=255, null=True)),
                ('host_email', models.CharField(db_column='HOST_EMAIL', max_length=100)),
                ('host_phone', models.CharField(db_column='HOST_PHONE', max_length=12)),
                ('rsvp_email', models.CharField(db_column='RSVP_EMAIL', max_length=100)),
                ('doing_business_as', models.CharField(blank=True, db_column='DOING_BUSINESS_AS', max_length=100, null=True)),
                ('venue', models.CharField(db_column='VENUE', max_length=100)),
                ('event_hash_tag', models.CharField(blank=True, db_column='EVENT_HASH_TAG', max_length=30, null=True)),
                ('personalized_url', models.CharField(blank=True, db_column='PERSONALIZED_URL', max_length=255, null=True)),
                ('session_id', models.CharField(db_column='SESSION_ID', max_length=12)),
                ('schd_option', models.CharField(db_column='SCHD_OPTION', max_length=1)),
                ('job_defnid', models.IntegerField(blank=True, db_column='JOB_DEFNID', null=True)),
                ('job_reqstid', models.IntegerField(blank=True, db_column='JOB_REQSTID', null=True)),
                ('schedule_dt', models.DateField(db_column='SCHEDULE_DT')),
                ('schedule_tm', models.TimeField(db_column='SCHEDULE_TM')),
                ('sent_dttm', models.DateTimeField(blank=True, db_column='SENT_DTTM', null=True)),
                ('create_final_video', models.CharField(db_column='CREATE_FINAL_VIDEO', max_length=1)),
                ('event_json_string', models.TextField(blank=True, db_column='EVENT_JSON_STRING', null=True)),
                ('final_video_file', models.CharField(db_column='FINAL_VIDEO_FILE', max_length=100)),
                ('video_thumb_file', models.CharField(db_column='VIDEO_THUMB_FILE', max_length=100)),
                ('email_thumb_file', models.CharField(db_column='EMAIL_THUMB_FILE', max_length=100)),
                ('save_draft_count', models.IntegerField(blank=True, db_column='SAVE_DRAFT_COUNT', null=True)),
                ('background_image', models.CharField(blank=True, db_column='BACKGROUND_IMAGE', max_length=255, null=True)),
                ('push_notification', models.CharField(db_column='PUSH_NOTIFICATION', max_length=1)),
                ('apns_status', models.CharField(db_column='APNS_STATUS', max_length=1)),
                ('lang_cd', models.CharField(blank=True, db_column='LANG_CD', max_length=20, null=True)),
                ('browser_os', models.CharField(blank=True, db_column='BROWSER_OS', max_length=100, null=True)),
                ('app_type', models.CharField(blank=True, db_column='APP_TYPE', max_length=1, null=True)),
                ('fb_share', models.CharField(db_column='FB_SHARE', max_length=1)),
                ('fb_share_status', models.CharField(db_column='FB_SHARE_STATUS', max_length=1)),
                ('fb_privacy_obj', models.TextField(blank=True, db_column='FB_PRIVACY_OBJ', null=True)),
                ('fb_post_id', models.CharField(blank=True, db_column='FB_POST_ID', max_length=100, null=True)),
                ('tw_share', models.CharField(blank=True, db_column='TW_SHARE', max_length=1, null=True)),
                ('tw_share_status', models.CharField(db_column='TW_SHARE_STATUS', max_length=1)),
                ('share_url', models.CharField(blank=True, db_column='SHARE_URL', max_length=256, null=True)),
                ('create_dttm', models.DateTimeField(db_column='CREATE_DTTM')),
                ('lastupd_dttm', models.DateTimeField(db_column='LASTUPD_DTTM')),
                ('celery_jobid', models.CharField(blank=True, db_column='CELERY_JOBID', max_length=100, null=True)),
                ('from_email_verified', models.CharField(blank=True, db_column='FROM_EMAIL_VERIFIED', max_length=1, null=True)),
                ('from_email_addr', models.CharField(blank=True, db_column='FROM_EMAIL_ADDR', max_length=100, null=True)),
                ('guest_template_id', models.CharField(blank=True, db_column='GUEST_TEMPLATE_ID', max_length=45, null=True)),
                ('is_custom_email_tpl', models.CharField(blank=True, db_column='IS_CUSTOM_EMAIL_TPL', max_length=1, null=True)),
                ('email_template_name', models.CharField(blank=True, db_column='EMAIL_TEMPLATE_NAME', max_length=100, null=True)),
                ('is_custom_guest_tpl', models.CharField(blank=True, db_column='IS_CUSTOM_GUEST_TPL', max_length=1, null=True)),
                ('guest_template_name', models.CharField(blank=True, db_column='GUEST_TEMPLATE_NAME', max_length=100, null=True)),
                ('email_subject_verified', models.CharField(blank=True, db_column='EMAIL_SUBJECT_VERIFIED', max_length=1, null=True)),
                ('email_subject', models.CharField(blank=True, db_column='EMAIL_SUBJECT', max_length=255, null=True)),
                ('customer_limit', models.IntegerField(blank=True, db_column='CUSTOMER_LIMIT', null=True)),
                ('video_length', models.CharField(blank=True, db_column='VIDEO_LENGTH', max_length=45, null=True)),
                ('payment_type', models.CharField(blank=True, db_column='PAYMENT_TYPE', max_length=2, null=True)),
            ],
            options={
                'db_table': 'EVENT_MAIN',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventReminder',
            fields=[
                ('userid', models.IntegerField(db_column='USERID')),
                ('eventid', models.IntegerField(db_column='EVENTID', primary_key=True, serialize=False)),
                ('rsvp_status', models.CharField(blank=True, db_column='RSVP_STATUS', max_length=1, null=True)),
                ('reminder_dt', models.DateField(db_column='REMINDER_DT')),
                ('reminder_tm', models.TimeField(db_column='REMINDER_TM')),
                ('reminder_descr', models.CharField(blank=True, db_column='REMINDER_DESCR', max_length=255, null=True)),
                ('reminder_status', models.CharField(db_column='REMINDER_STATUS', max_length=1)),
            ],
            options={
                'db_table': 'EVENT_REMINDER',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventRsvpPoll',
            fields=[
                ('seq_id', models.AutoField(db_column='SEQ_ID', primary_key=True, serialize=False)),
                ('userid', models.IntegerField(db_column='USERID')),
                ('eventid', models.IntegerField(db_column='EVENTID')),
                ('transactionid', models.IntegerField(db_column='TRANSACTIONID')),
                ('questionid', models.IntegerField(db_column='QUESTIONID')),
                ('poll_option1', models.CharField(blank=True, db_column='POLL_OPTION1', max_length=1, null=True)),
                ('poll_option2', models.CharField(blank=True, db_column='POLL_OPTION2', max_length=1, null=True)),
                ('poll_option3', models.CharField(blank=True, db_column='POLL_OPTION3', max_length=1, null=True)),
                ('poll_option4', models.CharField(blank=True, db_column='POLL_OPTION4', max_length=1, null=True)),
                ('poll_option5', models.CharField(blank=True, db_column='POLL_OPTION5', max_length=1, null=True)),
                ('poll_option6', models.CharField(blank=True, db_column='POLL_OPTION6', max_length=1, null=True)),
                ('poll_option7', models.CharField(blank=True, db_column='POLL_OPTION7', max_length=1, null=True)),
                ('poll_option8', models.CharField(blank=True, db_column='POLL_OPTION8', max_length=1, null=True)),
                ('lastupd_dttm', models.DateTimeField(blank=True, db_column='LASTUPD_DTTM', null=True)),
            ],
            options={
                'db_table': 'EVENT_RSVP_POLL',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventRsvpReport',
            fields=[
                ('seqid', models.AutoField(db_column='SEQID', primary_key=True, serialize=False)),
                ('userid', models.IntegerField(db_column='USERID')),
                ('eventid', models.IntegerField(db_column='EVENTID')),
                ('report_type', models.CharField(blank=True, db_column='REPORT_TYPE', max_length=1, null=True)),
                ('report_status', models.CharField(db_column='REPORT_STATUS', max_length=2)),
                ('host_emailid', models.CharField(db_column='HOST_EMAILID', max_length=100)),
                ('other_emailid', models.CharField(db_column='OTHER_EMAILID', max_length=100)),
                ('report_start_dt', models.DateTimeField(db_column='REPORT_START_DT')),
                ('report_end_dt', models.DateTimeField(db_column='REPORT_END_DT')),
                ('report_format', models.CharField(db_column='REPORT_FORMAT', max_length=2)),
                ('report_freq', models.CharField(db_column='REPORT_FREQ', max_length=10)),
                ('sort_order', models.CharField(db_column='SORT_ORDER', max_length=2)),
                ('report_last_sent_dttm', models.DateTimeField(db_column='REPORT_LAST_SENT_DTTM')),
                ('report_next_sch_dttm', models.DateTimeField(db_column='REPORT_NEXT_SCH_DTTM')),
                ('time_zone', models.CharField(db_column='TIME_ZONE', max_length=10)),
            ],
            options={
                'db_table': 'EVENT_RSVP_REPORT',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventSettings',
            fields=[
                ('userid', models.IntegerField(db_column='USERID')),
                ('eventid', models.IntegerField(db_column='EVENTID', primary_key=True, serialize=False)),
                ('notify_rsvp', models.CharField(db_column='NOTIFY_RSVP', max_length=1)),
                ('notify_guest_comment', models.CharField(db_column='NOTIFY_GUEST_COMMENT', max_length=1)),
                ('notify_guest_view', models.CharField(db_column='NOTIFY_GUEST_VIEW', max_length=1)),
                ('hide_host_logo', models.CharField(blank=True, db_column='HIDE_HOST_LOGO', max_length=1, null=True)),
                ('hide_comments', models.CharField(db_column='HIDE_COMMENTS', max_length=1)),
                ('hide_guest_list', models.CharField(db_column='HIDE_GUEST_LIST', max_length=1)),
                ('total_guests', models.IntegerField(db_column='TOTAL_GUESTS')),
                ('allow_kids', models.CharField(db_column='ALLOW_KIDS', max_length=1)),
                ('allow_adults', models.CharField(blank=True, db_column='ALLOW_ADULTS', max_length=1, null=True)),
                ('allow_forward_to_others', models.CharField(db_column='ALLOW_FORWARD_TO_OTHERS', max_length=1)),
                ('allow_to_share', models.CharField(db_column='ALLOW_TO_SHARE', max_length=1)),
                ('allow_fb_share', models.CharField(db_column='ALLOW_FB_SHARE', max_length=1)),
                ('allow_g_plus_share', models.CharField(db_column='ALLOW_G_PLUS_SHARE', max_length=1)),
                ('allow_tw_share', models.CharField(db_column='ALLOW_TW_SHARE', max_length=1)),
                ('allow_linkedin_share', models.CharField(db_column='ALLOW_LINKEDIN_SHARE', max_length=1)),
                ('guest_name_req', models.CharField(db_column='GUEST_NAME_REQ', max_length=1)),
                ('other_guest_name_req', models.CharField(db_column='OTHER_GUEST_NAME_REQ', max_length=1)),
                ('event_reminder', models.CharField(db_column='EVENT_REMINDER', max_length=1)),
                ('ask_rsvp_poll_question', models.CharField(db_column='ASK_RSVP_POLL_QUESTION', max_length=1)),
                ('rsvp_poll_question', models.CharField(blank=True, db_column='RSVP_POLL_QUESTION', max_length=255, null=True)),
                ('rsvp_poll_options', models.TextField(blank=True, db_column='RSVP_POLL_OPTIONS', null=True)),
                ('rsvp_poll_options_type', models.CharField(blank=True, db_column='RSVP_POLL_OPTIONS_TYPE', max_length=1, null=True)),
            ],
            options={
                'db_table': 'EVENT_SETTINGS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventStatsVw',
            fields=[
                ('userid', models.IntegerField(db_column='USERID')),
                ('eventid', models.IntegerField(db_column='EVENTID', primary_key=True, serialize=False)),
                ('total_guests', models.IntegerField(db_column='TOTAL_GUESTS')),
                ('yes', models.IntegerField(blank=True, db_column='YES', null=True)),
                ('no', models.IntegerField(blank=True, db_column='NO', null=True)),
                ('maybe', models.IntegerField(blank=True, db_column='MAYBE', null=True)),
                ('views', models.IntegerField(blank=True, db_column='VIEWS', null=True)),
                ('lastupd_dttm', models.DateTimeField(blank=True, db_column='LASTUPD_DTTM', null=True)),
            ],
            options={
                'db_table': 'EVENT_STATS_VW',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventTemplates',
            fields=[
                ('userid', models.IntegerField(db_column='USERID')),
                ('eventid', models.IntegerField(db_column='EVENTID', primary_key=True, serialize=False)),
                ('guest_template_json', models.TextField(blank=True, db_column='GUEST_TEMPLATE_JSON', null=True)),
                ('email_template_json', models.TextField(blank=True, db_column='EMAIL_TEMPLATE_JSON', null=True)),
                ('email_template_source', models.TextField(blank=True, db_column='EMAIL_TEMPLATE_SOURCE', null=True)),
                ('email_template_thumb', models.CharField(blank=True, db_column='EMAIL_TEMPLATE_THUMB', max_length=256, null=True)),
                ('host_lbl', models.CharField(blank=True, db_column='HOST_LBL', max_length=30, null=True)),
                ('about_lbl', models.CharField(blank=True, db_column='ABOUT_LBL', max_length=30, null=True)),
                ('comment_lbl', models.CharField(blank=True, db_column='COMMENT_LBL', max_length=30, null=True)),
                ('forward_to_lbl', models.CharField(blank=True, db_column='FORWARD_TO_LBL', max_length=30, null=True)),
                ('location_lbl', models.CharField(blank=True, db_column='LOCATION_LBL', max_length=30, null=True)),
                ('rsvp_lbl', models.CharField(blank=True, db_column='RSVP_LBL', max_length=30, null=True)),
                ('rsvp_option1', models.CharField(blank=True, db_column='RSVP_OPTION1', max_length=30, null=True)),
                ('rsvp_option2', models.CharField(blank=True, db_column='RSVP_OPTION2', max_length=30, null=True)),
                ('rsvp_option3', models.CharField(blank=True, db_column='RSVP_OPTION3', max_length=30, null=True)),
                ('first_name_lbl', models.CharField(blank=True, db_column='FIRST_NAME_LBL', max_length=30, null=True)),
                ('last_name_lbl', models.CharField(blank=True, db_column='LAST_NAME_LBL', max_length=30, null=True)),
                ('adults_lbl', models.CharField(blank=True, db_column='ADULTS_LBL', max_length=30, null=True)),
                ('kids_lbl', models.CharField(blank=True, db_column='KIDS_LBL', max_length=30, null=True)),
                ('msg_to_host_lbl', models.CharField(blank=True, db_column='MSG_TO_HOST_LBL', max_length=30, null=True)),
                ('submit_rsvp_lbl', models.CharField(blank=True, db_column='SUBMIT_RSVP_LBL', max_length=30, null=True)),
                ('post_your_comments_lbl', models.CharField(blank=True, db_column='POST_YOUR_COMMENTS_LBL', max_length=30, null=True)),
                ('comments_heading_lbl', models.CharField(blank=True, db_column='COMMENTS_HEADING_LBL', max_length=30, null=True)),
                ('font_family', models.CharField(blank=True, db_column='FONT_FAMILY', max_length=255, null=True)),
                ('font_color', models.CharField(blank=True, db_column='FONT_COLOR', max_length=45, null=True)),
                ('background_color', models.CharField(blank=True, db_column='BACKGROUND_COLOR', max_length=45, null=True)),
                ('background_theme_color', models.CharField(blank=True, db_column='BACKGROUND_THEME_COLOR', max_length=45, null=True)),
                ('main_headings_color', models.CharField(blank=True, db_column='MAIN_HEADINGS_COLOR', max_length=45, null=True)),
                ('buttons_color', models.CharField(blank=True, db_column='BUTTONS_COLOR', max_length=45, null=True)),
                ('buttons_text_color', models.CharField(blank=True, db_column='BUTTONS_TEXT_COLOR', max_length=45, null=True)),
                ('labels_color', models.CharField(blank=True, db_column='LABELS_COLOR', max_length=45, null=True)),
                ('event_title_color', models.CharField(blank=True, db_column='EVENT_TITLE_COLOR', max_length=45, null=True)),
            ],
            options={
                'db_table': 'EVENT_TEMPLATES',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FbSocialShare',
            fields=[
                ('userid', models.IntegerField(db_column='USERID', primary_key=True, serialize=False)),
                ('fb_emailid', models.CharField(db_column='FB_EMAILID', max_length=250)),
                ('fb_userid', models.BigIntegerField(db_column='FB_USERID')),
                ('fb_access_token', models.TextField(db_column='FB_ACCESS_TOKEN')),
                ('expire_dt', models.DateTimeField(db_column='EXPIRE_DT')),
                ('lastupd_dttm', models.DateTimeField(blank=True, db_column='LASTUPD_DTTM', null=True)),
                ('share_enable', models.CharField(db_column='SHARE_ENABLE', max_length=1)),
            ],
            options={
                'db_table': 'FB_SOCIAL_SHARE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GnlContactUs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(db_column='USER_NAME', max_length=100)),
                ('user_email', models.CharField(db_column='USER_EMAIL', max_length=100)),
                ('user_phone', models.CharField(blank=True, db_column='USER_PHONE', max_length=12, null=True)),
                ('primary_use', models.CharField(db_column='PRIMARY_USE', max_length=45)),
                ('contact_reason', models.CharField(db_column='CONTACT_REASON', max_length=45)),
                ('contact_subject', models.CharField(db_column='CONTACT_SUBJECT', max_length=255)),
                ('contact_text', models.TextField(db_column='CONTACT_TEXT')),
                ('contact_dttm', models.DateTimeField(db_column='CONTACT_DTTM')),
            ],
            options={
                'db_table': 'GNL_CONTACT_US',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InvSubscribers',
            fields=[
                ('seq_id', models.AutoField(db_column='SEQ_ID', primary_key=True, serialize=False)),
                ('subscription_type', models.CharField(blank=True, db_column='SUBSCRIPTION_TYPE', max_length=1, null=True)),
                ('emailid', models.CharField(db_column='EMAILID', max_length=100)),
                ('first_name', models.CharField(blank=True, db_column='FIRST_NAME', max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, db_column='LAST_NAME', max_length=100, null=True)),
                ('company', models.CharField(blank=True, db_column='COMPANY', max_length=100, null=True)),
                ('phone_nbr', models.CharField(blank=True, db_column='PHONE_NBR', max_length=14, null=True)),
                ('active', models.CharField(blank=True, db_column='ACTIVE', max_length=1, null=True)),
                ('subscribe_dttm', models.DateTimeField(blank=True, db_column='SUBSCRIBE_DTTM', null=True)),
                ('last_upd_dttm', models.DateTimeField(blank=True, db_column='LAST_UPD_DTTM', null=True)),
            ],
            options={
                'db_table': 'INV_SUBSCRIBERS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RestapiAccess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField(db_column='USERID')),
                ('appid', models.CharField(db_column='APPID', max_length=100)),
                ('app_secret', models.CharField(db_column='APP_SECRET', max_length=45)),
                ('device_id', models.CharField(db_column='DEVICE_ID', max_length=100)),
                ('device_type', models.CharField(db_column='DEVICE_TYPE', max_length=1)),
                ('created_dttm', models.DateTimeField(db_column='CREATED_DTTM')),
            ],
            options={
                'db_table': 'RESTAPI_ACCESS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RestapiKeys',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('userid', models.IntegerField(db_column='USERID')),
                ('access_token', models.CharField(db_column='ACCESS_TOKEN', max_length=40)),
                ('level', models.IntegerField(db_column='LEVEL')),
                ('ignore_limits', models.IntegerField(db_column='IGNORE_LIMITS')),
                ('is_private_key', models.IntegerField(db_column='IS_PRIVATE_KEY')),
                ('ip_address', models.TextField(blank=True, db_column='IP_ADDRESS', null=True)),
                ('created_dttm', models.DateTimeField(db_column='CREATED_DTTM')),
            ],
            options={
                'db_table': 'RESTAPI_KEYS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RestapiLimits',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uri', models.CharField(max_length=255)),
                ('count', models.IntegerField()),
                ('hour_started', models.IntegerField()),
                ('api_key', models.CharField(max_length=40)),
            ],
            options={
                'db_table': 'RESTAPI_LIMITS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SchemaVersion',
            fields=[
                ('version_rank', models.IntegerField()),
                ('installed_rank', models.IntegerField()),
                ('version', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=200)),
                ('type', models.CharField(max_length=20)),
                ('script', models.CharField(max_length=1000)),
                ('checksum', models.IntegerField(blank=True, null=True)),
                ('installed_by', models.CharField(max_length=100)),
                ('installed_on', models.DateTimeField()),
                ('execution_time', models.IntegerField()),
                ('success', models.IntegerField()),
            ],
            options={
                'db_table': 'schema_version',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SendEmailMaster',
            fields=[
                ('emailid', models.CharField(db_column='EMAILID', max_length=100, primary_key=True, serialize=False)),
                ('userid', models.IntegerField(db_column='USERID')),
                ('device_type', models.CharField(blank=True, db_column='DEVICE_TYPE', max_length=1, null=True)),
                ('browser_type', models.CharField(db_column='BROWSER_TYPE', max_length=100)),
                ('is_user', models.CharField(db_column='IS_USER', max_length=1)),
                ('is_guest', models.CharField(db_column='IS_GUEST', max_length=1)),
                ('is_test_user', models.CharField(db_column='IS_TEST_USER', max_length=1)),
                ('unsubscribe', models.CharField(db_column='UNSUBSCRIBE', max_length=1)),
                ('create_dttm', models.DateTimeField(db_column='CREATE_DTTM')),
                ('last_sync_dttm', models.DateTimeField(db_column='LAST_SYNC_DTTM')),
                ('language_cd', models.CharField(db_column='LANGUAGE_CD', max_length=3)),
                ('alt_emailid', models.CharField(db_column='ALT_EMAILID', max_length=100)),
                ('country_code', models.CharField(blank=True, db_column='COUNTRY_CODE', max_length=20, null=True)),
            ],
            options={
                'db_table': 'SEND_EMAIL_MASTER',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SesTracking',
            fields=[
                ('ses_messageid', models.CharField(db_column='SES_MESSAGEID', max_length=126, primary_key=True, serialize=False)),
                ('userid', models.IntegerField(db_column='USERID')),
                ('eventid', models.IntegerField(db_column='EVENTID')),
                ('event_type', models.CharField(db_column='EVENT_TYPE', max_length=30)),
                ('transactionid', models.IntegerField(db_column='TRANSACTIONID')),
                ('emailid', models.CharField(db_column='EMAILID', max_length=250)),
                ('sender_emailid', models.CharField(db_column='SENDER_EMAILID', max_length=250)),
                ('bounce_status', models.CharField(blank=True, db_column='BOUNCE_STATUS', max_length=1, null=True)),
                ('bounce_type', models.CharField(blank=True, db_column='BOUNCE_TYPE', max_length=126, null=True)),
                ('verified', models.CharField(db_column='VERIFIED', max_length=1)),
                ('retry', models.CharField(db_column='RETRY', max_length=1)),
                ('retry_sent', models.CharField(db_column='RETRY_SENT', max_length=1)),
                ('block', models.CharField(db_column='BLOCK', max_length=1)),
                ('ignore', models.CharField(db_column='IGNORE', max_length=1)),
                ('lastupd_dttm', models.DateTimeField(db_column='LASTUPD_DTTM')),
                ('complaint_status', models.CharField(blank=True, db_column='COMPLAINT_STATUS', max_length=1, null=True)),
                ('complaint_type', models.CharField(blank=True, db_column='COMPLAINT_TYPE', max_length=45, null=True)),
                ('delivery_status', models.CharField(blank=True, db_column='DELIVERY_STATUS', max_length=1, null=True)),
                ('delivery_time', models.DateTimeField(blank=True, db_column='DELIVERY_TIME', null=True)),
                ('bounce_sub_type', models.CharField(blank=True, db_column='BOUNCE_SUB_TYPE', max_length=45, null=True)),
                ('ses_notification_body', models.TextField(blank=True, db_column='SES_NOTIFICATION_BODY', null=True)),
                ('ses_delivery_body', models.TextField(blank=True, db_column='SES_DELIVERY_BODY', null=True)),
                ('ses_bounce_body', models.TextField(blank=True, db_column='SES_BOUNCE_BODY', null=True)),
                ('ses_complaint_body', models.TextField(blank=True, db_column='SES_COMPLAINT_BODY', null=True)),
                ('ses_delivery_upd_dttm', models.DateTimeField(blank=True, db_column='SES_DELIVERY_UPD_DTTM', null=True)),
                ('ses_bounce_upd_dttm', models.DateTimeField(blank=True, db_column='SES_BOUNCE_UPD_DTTM', null=True)),
                ('ses_complaint_upd_dttm', models.DateTimeField(blank=True, db_column='SES_COMPLAINT_UPD_DTTM', null=True)),
            ],
            options={
                'db_table': 'SES_TRACKING',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SesTrackingDump',
            fields=[
                ('ses_notification_type', models.CharField(db_column='SES_NOTIFICATION_TYPE', max_length=50)),
                ('notification_json', models.TextField(blank=True, db_column='NOTIFICATION_JSON', null=True)),
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'SES_TRACKING_DUMP',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ShortUrls',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('long_url', models.CharField(db_column='LONG_URL', max_length=255)),
                ('short_code', models.CharField(db_column='SHORT_CODE', max_length=12)),
                ('create_dttm', models.DateTimeField(db_column='CREATE_DTTM')),
                ('link_viewed_count', models.IntegerField(db_column='LINK_VIEWED_COUNT')),
            ],
            options={
                'db_table': 'SHORT_URLS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwSocialShare',
            fields=[
                ('userid', models.IntegerField(db_column='USERID', primary_key=True, serialize=False)),
                ('tw_userid', models.BigIntegerField(db_column='TW_USERID')),
                ('tw_user_name', models.CharField(db_column='TW_USER_NAME', max_length=50)),
                ('tw_access_token', models.CharField(db_column='TW_ACCESS_TOKEN', max_length=100)),
                ('tw_access_token_secret', models.CharField(db_column='TW_ACCESS_TOKEN_SECRET', max_length=100)),
                ('expire_dt', models.DateTimeField(blank=True, db_column='EXPIRE_DT', null=True)),
                ('lastupd_dttm', models.DateTimeField(blank=True, db_column='LASTUPD_DTTM', null=True)),
                ('share_enable', models.CharField(db_column='SHARE_ENABLE', max_length=1)),
            ],
            options={
                'db_table': 'TW_SOCIAL_SHARE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UsrAddress',
            fields=[
                ('userid', models.IntegerField(db_column='USERID', primary_key=True, serialize=False)),
                ('address_type', models.IntegerField(blank=True, db_column='ADDRESS_TYPE', null=True)),
                ('address1', models.CharField(blank=True, db_column='ADDRESS1', max_length=255, null=True)),
                ('address2', models.CharField(blank=True, db_column='ADDRESS2', max_length=255, null=True)),
                ('city', models.CharField(blank=True, db_column='CITY', max_length=50, null=True)),
                ('state', models.CharField(blank=True, db_column='STATE', max_length=50, null=True)),
                ('country', models.CharField(blank=True, db_column='COUNTRY', max_length=45, null=True)),
                ('zipcode', models.CharField(blank=True, db_column='ZIPCODE', max_length=8, null=True)),
                ('phone_nbr', models.CharField(blank=True, db_column='PHONE_NBR', max_length=12, null=True)),
                ('lastupd_dttm', models.DateField(blank=True, db_column='LASTUPD_DTTM', null=True)),
            ],
            options={
                'db_table': 'USR_ADDRESS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UsrContacts',
            fields=[
                ('userid', models.IntegerField(db_column='USERID')),
                ('contact_id', models.AutoField(db_column='CONTACT_ID', primary_key=True, serialize=False)),
                ('first_name', models.CharField(blank=True, db_column='FIRST_NAME', max_length=30, null=True)),
                ('last_name', models.CharField(blank=True, db_column='LAST_NAME', max_length=30, null=True)),
                ('middle_name', models.CharField(blank=True, db_column='MIDDLE_NAME', max_length=30, null=True)),
                ('nickname', models.CharField(blank=True, db_column='NICKNAME', max_length=50, null=True)),
                ('gender', models.CharField(blank=True, db_column='GENDER', max_length=1, null=True)),
                ('emailid', models.CharField(db_column='EMAILID', max_length=100)),
                ('phone_nbr', models.CharField(blank=True, db_column='PHONE_NBR', max_length=12, null=True)),
                ('import_from', models.CharField(blank=True, db_column='IMPORT_FROM', max_length=1, null=True)),
                ('create_dttm', models.DateTimeField(blank=True, db_column='CREATE_DTTM', null=True)),
                ('lastupd_dttm', models.DateTimeField(blank=True, db_column='LASTUPD_DTTM', null=True)),
            ],
            options={
                'db_table': 'USR_CONTACTS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UsrGroups',
            fields=[
                ('userid', models.IntegerField(db_column='USERID')),
                ('group_id', models.AutoField(db_column='GROUP_ID', primary_key=True, serialize=False)),
                ('group_name', models.CharField(db_column='GROUP_NAME', max_length=50)),
                ('group_status', models.CharField(db_column='GROUP_STATUS', max_length=1)),
                ('create_dttm', models.DateTimeField(db_column='CREATE_DTTM')),
                ('lastupd_dttm', models.DateTimeField(db_column='LASTUPD_DTTM')),
            ],
            options={
                'db_table': 'USR_GROUPS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UsrGrpContacts',
            fields=[
                ('userid', models.IntegerField(db_column='USERID')),
                ('group_id', models.IntegerField(db_column='GROUP_ID')),
                ('contact_id', models.AutoField(db_column='CONTACT_ID', primary_key=True, serialize=False)),
                ('emailid', models.CharField(db_column='EMAILID', max_length=100)),
                ('first_name', models.CharField(blank=True, db_column='FIRST_NAME', max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, db_column='LAST_NAME', max_length=100, null=True)),
                ('middle_name', models.CharField(blank=True, db_column='MIDDLE_NAME', max_length=100, null=True)),
                ('nickname', models.CharField(blank=True, db_column='NICKNAME', max_length=100, null=True)),
                ('phone_nbr', models.CharField(blank=True, db_column='PHONE_NBR', max_length=12, null=True)),
                ('key_date', models.DateField(blank=True, db_column='KEY_DATE', null=True)),
                ('sch_date', models.DateTimeField(blank=True, db_column='SCH_DATE', null=True)),
                ('lastupd_dttm', models.DateTimeField(db_column='LASTUPD_DTTM')),
                ('status', models.CharField(db_column='STATUS', max_length=1)),
                ('ignore', models.CharField(db_column='IGNORE', max_length=1)),
            ],
            options={
                'db_table': 'USR_GRP_CONTACTS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UsrPaymentHdr',
            fields=[
                ('userid', models.IntegerField(db_column='USERID', primary_key=True, serialize=False)),
                ('emailid', models.CharField(db_column='EMAILID', max_length=100)),
                ('payment_type', models.CharField(db_column='PAYMENT_TYPE', max_length=2)),
                ('remaining_events_count', models.IntegerField(blank=True, db_column='REMAINING_EVENTS_COUNT', null=True)),
                ('customer_limit', models.IntegerField(blank=True, db_column='CUSTOMER_LIMIT', null=True)),
                ('video_length', models.CharField(blank=True, db_column='VIDEO_LENGTH', max_length=45, null=True)),
                ('payment_status', models.CharField(blank=True, db_column='PAYMENT_STATUS', max_length=1, null=True)),
                ('coupon_cd', models.CharField(blank=True, db_column='COUPON_CD', max_length=10, null=True)),
                ('payment_schedule', models.CharField(db_column='PAYMENT_SCHEDULE', max_length=1)),
                ('enroll_dt', models.DateField(db_column='ENROLL_DT')),
                ('expire_dt', models.DateField(db_column='EXPIRE_DT')),
                ('discount_cd', models.CharField(blank=True, db_column='DISCOUNT_CD', max_length=10, null=True)),
                ('last_upd_dttm', models.DateTimeField(db_column='LAST_UPD_DTTM')),
            ],
            options={
                'db_table': 'USR_PAYMENT_HDR',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UsrPaymentLine',
            fields=[
                ('userid', models.IntegerField(db_column='USERID')),
                ('seqid', models.AutoField(db_column='SEQID', primary_key=True, serialize=False)),
                ('payment_type', models.CharField(db_column='PAYMENT_TYPE', max_length=2)),
                ('remaining_events_count', models.IntegerField(blank=True, db_column='REMAINING_EVENTS_COUNT', null=True)),
                ('amount', models.FloatField(blank=True, db_column='AMOUNT', null=True)),
                ('payment', models.FloatField(db_column='PAYMENT')),
                ('payment_status', models.CharField(db_column='PAYMENT_STATUS', max_length=1)),
                ('payment_schedule', models.CharField(db_column='PAYMENT_SCHEDULE', max_length=1)),
                ('transactionid', models.CharField(blank=True, db_column='TRANSACTIONID', max_length=256, null=True)),
                ('correlationid', models.CharField(blank=True, db_column='CORRELATIONID', max_length=100, null=True)),
                ('token', models.CharField(blank=True, db_column='TOKEN', max_length=100, null=True)),
                ('payerid', models.CharField(blank=True, db_column='PAYERID', max_length=100, null=True)),
                ('coupon_cd', models.CharField(blank=True, db_column='COUPON_CD', max_length=10, null=True)),
                ('discount_cd', models.CharField(blank=True, db_column='DISCOUNT_CD', max_length=10, null=True)),
                ('paid_by', models.CharField(blank=True, db_column='PAID_BY', max_length=30, null=True)),
                ('paid_dttm', models.DateTimeField(db_column='PAID_DTTM')),
                ('currencycode', models.CharField(blank=True, db_column='CURRENCYCODE', max_length=3, null=True)),
                ('address', models.CharField(blank=True, db_column='ADDRESS', max_length=256, null=True)),
                ('enroll_dt', models.DateField(db_column='ENROLL_DT')),
                ('expire_dt', models.DateField(db_column='EXPIRE_DT')),
                ('last_upd_dttm', models.DateTimeField(db_column='LAST_UPD_DTTM')),
            ],
            options={
                'db_table': 'USR_PAYMENT_LINE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UsrProfile',
            fields=[
                ('userid', models.IntegerField(db_column='USERID', primary_key=True, serialize=False)),
                ('user_type', models.CharField(db_column='USER_TYPE', max_length=1)),
                ('business_name', models.CharField(db_column='BUSINESS_NAME', max_length=30)),
                ('doing_business_as', models.CharField(db_column='DOING_BUSINESS_AS', max_length=30)),
                ('personalized_url', models.CharField(blank=True, db_column='PERSONALIZED_URL', max_length=255, null=True)),
                ('first_name', models.CharField(db_column='FIRST_NAME', max_length=30)),
                ('last_name', models.CharField(db_column='LAST_NAME', max_length=30)),
                ('middle_name', models.CharField(db_column='MIDDLE_NAME', max_length=30)),
                ('nick_name', models.CharField(db_column='NICK_NAME', max_length=50)),
                ('birthdt', models.DateField(db_column='BIRTHDT')),
                ('gender', models.CharField(db_column='GENDER', max_length=1)),
                ('user_photo_name', models.CharField(db_column='USER_PHOTO_NAME', max_length=100)),
                ('user_photo_url', models.CharField(db_column='USER_PHOTO_URL', max_length=225)),
                ('timezone', models.CharField(db_column='TIMEZONE', max_length=225)),
                ('alt_emailid', models.CharField(blank=True, db_column='ALT_EMAILID', max_length=100, null=True)),
                ('host_email_addr', models.CharField(blank=True, db_column='HOST_EMAIL_ADDR', max_length=100, null=True)),
                ('rsvp_email_addr', models.CharField(blank=True, db_column='RSVP_EMAIL_ADDR', max_length=100, null=True)),
                ('host_email_verified', models.CharField(blank=True, db_column='HOST_EMAIL_VERIFIED', max_length=1, null=True)),
                ('profile_status', models.CharField(blank=True, db_column='PROFILE_STATUS', max_length=1, null=True)),
                ('language_cd', models.CharField(blank=True, db_column='LANGUAGE_CD', max_length=3, null=True)),
                ('country_code', models.CharField(db_column='COUNTRY_CODE', max_length=20)),
            ],
            options={
                'db_table': 'USR_PROFILE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UsrSecModuleHdr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField(blank=True, db_column='USERID', null=True)),
                ('access', models.CharField(blank=True, db_column='ACCESS', max_length=1, null=True)),
                ('last_upd_dttm', models.DateTimeField(blank=True, db_column='LAST_UPD_DTTM', null=True)),
            ],
            options={
                'db_table': 'USR_SEC_MODULE_HDR',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UsrSecModuleLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.IntegerField(blank=True, db_column='USERID', null=True)),
                ('access', models.CharField(blank=True, db_column='ACCESS', max_length=1, null=True)),
                ('module', models.CharField(blank=True, db_column='MODULE', max_length=30, null=True)),
                ('menu_item', models.CharField(blank=True, db_column='MENU_ITEM', max_length=30, null=True)),
            ],
            options={
                'db_table': 'USR_SEC_MODULE_LINE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UsrSignon',
            fields=[
                ('userid', models.AutoField(db_column='USERID', primary_key=True, serialize=False)),
                ('emailid', models.CharField(db_column='EMAILID', max_length=100)),
                ('passwd', models.CharField(db_column='PASSWD', max_length=100)),
                ('user_type', models.CharField(db_column='USER_TYPE', max_length=1)),
                ('payment_type', models.CharField(db_column='PAYMENT_TYPE', max_length=2)),
                ('user_auth_type', models.CharField(db_column='USER_AUTH_TYPE', max_length=1)),
                ('acct_lock', models.CharField(db_column='ACCT_LOCK', max_length=1)),
                ('alt_emailid', models.CharField(blank=True, db_column='ALT_EMAILID', max_length=100, null=True)),
                ('forgot_pwd_session', models.DateField(db_column='FORGOT_PWD_SESSION')),
                ('user_verification', models.CharField(db_column='USER_VERIFICATION', max_length=1)),
                ('user_verification_session', models.DateField(db_column='USER_VERIFICATION_SESSION')),
                ('user_ip', models.CharField(db_column='USER_IP', max_length=45)),
                ('latitude', models.FloatField(blank=True, db_column='LATITUDE', null=True)),
                ('longitude', models.FloatField(blank=True, db_column='LONGITUDE', null=True)),
                ('app_type', models.CharField(blank=True, db_column='APP_TYPE', max_length=1, null=True)),
                ('last_signon_dttm', models.DateTimeField(db_column='LAST_SIGNON_DTTM')),
                ('create_dttm', models.DateField(db_column='CREATE_DTTM')),
            ],
            options={
                'db_table': 'USR_SIGNON',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VersionData',
            fields=[
                ('version_id', models.IntegerField(db_column='VERSION_ID', primary_key=True, serialize=False)),
                ('version_name', models.CharField(db_column='VERSION_NAME', max_length=10)),
                ('force_update', models.CharField(db_column='FORCE_UPDATE', max_length=1)),
                ('description', models.TextField(db_column='DESCRIPTION')),
                ('created_dttm', models.DateField(db_column='CREATED_DTTM')),
                ('url', models.CharField(blank=True, db_column='URL', max_length=150, null=True)),
            ],
            options={
                'db_table': 'VERSION_DATA',
                'managed': False,
            },
        ),
    ]
